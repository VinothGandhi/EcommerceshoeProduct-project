package com.ecommerceshoe.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import com.ecommerceshoe.model.Product;
import com.ecommerceshoe.model.Users;

public class ProductDao {
	public static void inserproduct(Product product) {
		ConnectionUtil conUtil = new ConnectionUtil();
		
		String insertQuery = "insert into  Product(Brand_name,Brand_type,Brand_size,color,prices,manufacture_date) values(?,?,?,?,?,?)";
		Connection con = conUtil.getDbconnection();
		PreparedStatement pstmt = null;
		try {

			pstmt = con.prepareStatement(insertQuery);
			pstmt.setString(1, product.getBrandName());
			pstmt.setString(2, product.getBrandType());
			pstmt.setInt(3, product.getBrandSize());
			pstmt.setString(4,product.getColor());
			pstmt.setDouble(5, product.getPrices());
			pstmt.setDate(6,new java.sql.Date(product.getManufactureDate().getTime()) );
			int i=pstmt.executeUpdate();
			System.out.println(i+"Value Inserted Successfully");

		} catch (SQLException e) {
			//catch the exception and get that message
			e.printStackTrace();
			System.out.println("Value not Setted in the query");
		}
	}
		
		
		public  void updated(Product product) {
			
			String updateQuery="update Product set Brand_size=?,prices=? where products_id=? and color=? ";
			
			ConnectionUtil conUtil;
			Connection con = ConnectionUtil.getDbconnection();
			PreparedStatement pstmt = null;
			try {
				
			 pstmt= con.prepareStatement(updateQuery);
			
			     pstmt.setInt(1, product.getBrandSize());
			     
			     pstmt.setDouble(2, product.getPrices());
			     pstmt.setInt(3, product.getProductsId());
			     pstmt.setString(4, product.getColor());
				     int i=pstmt.executeUpdate();
				     System.out.println("updated");
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
		    

		}
		public void delete(Product product) {

			String deleteQuery="delete from  Product where products_id=?";

			Connection con;
			try {
				con = ConnectionUtil.getDbconnection();
				PreparedStatement pstmt= con.prepareStatement(deleteQuery);

				pstmt.setInt(1, product.getProductsId());
				int i=pstmt.executeUpdate();
				System.out.println(i+"delete");
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
	}
		public List<Product> showProduct() {
			List<Product> productsList = new ArrayList<Product>();
			String prod = "select * from products";
			
			Connection con = ConnectionUtil.getDbconnection();
			Product products = null;
			try {
				Statement stmt = con.createStatement();
				ResultSet rs = stmt.executeQuery(prod);
				while (rs.next()) {
					products = new Product(rs.getString(1), rs.getString(2), Integer.parseInt(rs.getString(3)), rs.getString(4),Double.parseDouble(rs.getString(5)),java.sql.Date.valueOf(rs.getString(6)));
					productsList.add(products);
				}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			return productsList;
		}

}
